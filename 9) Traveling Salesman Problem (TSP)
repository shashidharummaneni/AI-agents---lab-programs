from itertools import permutations

def traveling_salesman(graph):
    n = len(graph)
    min_path = None
    min_cost = float('inf')
    
    for perm in permutations(range(1, n)):
        current_cost = graph[0][perm[0]]
        for i in range(len(perm) - 1):
            current_cost += graph[perm[i]][perm[i+1]]
        current_cost += graph[perm[-1]][0]
        if current_cost < min_cost:
            min_cost = current_cost
            min_path = (0,) + perm + (0,)
    return min_path, min_cost

graph = [
    [0, 10, 15, 20],
    [10, 0, 35, 25],
    [15, 35, 0, 30],
    [20, 25, 30, 0]
]
print(traveling_salesman(graph))
