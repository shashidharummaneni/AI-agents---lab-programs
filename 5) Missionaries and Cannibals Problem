from collections import deque

def missionaries_cannibals():
    def is_valid(state):
        m, c, b = state
        if m < 0 or c < 0 or m > 3 or c > 3:
            return False
        if m > 0 and m < c:
            return False
        if (3 - m) > 0 and (3 - m) < (3 - c):
            return False
        return True
    
    queue = deque([(3, 3, 1, [])])
    visited = set()
    
    while queue:
        m, c, b, path = queue.popleft()
        if (m, c, b) in visited:
            continue
        visited.add((m, c, b))
        if m == 0 and c == 0 and b == 0:
            return path
        moves = [(1, 0), (2, 0), (0, 1), (0, 2), (1, 1)]
        for dm, dc in moves:
            if b == 1:
                new_state = (m - dm, c - dc, 0)
            else:
                new_state = (m + dm, c + dc, 1)
            if is_valid(new_state):
                queue.append((*new_state, path + [(dm, dc, b)]))
    return None

print(missionaries_cannibals())
